on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.4

      - name: Build
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o cmd-runner-${{ matrix.os }}-${{ matrix.arch }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Provide the GitHub token
          tag_name: ${{ github.event.release.tag_name }}
          release_name: Release ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cmd-runner-${{ matrix.os }}-${{ matrix.arch }}
          asset_name: cmd-runner-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
